- name: Restart postgresql.service
  service:
    name: postgresql
    state: restarted
    enabled: yes

- name: Add privilege escalation to user 'postgres'
  environment:
    PATH:
      "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:{{ ansible_env.PATH }} "
  lineinfile:
    dest: /etc/sudoers.d/postgres
    owner: root
    group: root
    mode: 0440
    line: "%{{ ansible_user_id }} ALL=(postgres) NOPASSWD: ALL"
    state: present
    create: yes
    validate: "visudo -cf %s"

- name: Delete database
  become_user: postgres
  become_method: sudo
  postgresql_db:
    name: '{{ db_name }}'
    state: absent

- name: Create database
  become_user: postgres
  become_method: sudo
  postgresql_db:
    name: '{{ db_name }}'
    encoding: UTF-8
    lc_collate: ja_JP.UTF-8
    lc_ctype: ja_JP.UTF-8
    template: template0

- name: Restore database
  become_user: postgres
  become_method: sudo
  environment:
    PGPASSWORD: '{{ db_password }}'
  shell:
    "psql -h localhost -U {{ db_user }} {{ db_name }} < {{ backup_data_dir }}/{{ pg_dump_file }}"

- name: Update gem packages
  command: bundle update
  args:
    chdir: '{{ redmine_dir }}'
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"

- name: Create secret token
  command: bundle exec rake generate_secret_token
  args:
    chdir: '{{ redmine_dir }}'
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
    RAILS_ENV: production

- name: Execute database migration
  command: bin/rake db:migrate
  args:
    chdir: '{{ redmine_dir }}'
  environment:
    RAILS_ENV: production

- name: Restart httpd
  service:
    name: httpd
    state: restarted
    enabled: yes

- name: Remove privilege escalation from user 'postgres'
  file:
    path: /etc/sudoers.d/postgres
    state: absent
